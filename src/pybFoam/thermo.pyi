class basicThermo:
    def __init__(self, *args, **kwargs) -> None: ...
    def Cp(self, *args, **kwargs): ...
    def Cv(self, *args, **kwargs): ...
    def T(self, *args, **kwargs): ...
    def alphaEff(self, *args, **kwargs): ...
    @staticmethod
    def from_registry(arg0) -> basicThermo: ...
    def he(self, *args, **kwargs): ...
    def kappa(self, *args, **kwargs): ...
    def kappaEff(self, *args, **kwargs): ...
    def p(self, *args, **kwargs): ...
    def rho(self, *args, **kwargs): ...

class fluidThermo(basicThermo):
    def __init__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def from_registry(arg0) -> fluidThermo: ...

class solidThermo(basicThermo):
    def __init__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def from_registry(arg0) -> solidThermo: ...
